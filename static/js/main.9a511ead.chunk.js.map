{"version":3,"sources":["todo.js","index.js"],"names":["Todo","useState","inputData","setInputData","localStorage","getItem","JSON","parse","items","setItems","toggleSubmit","setToggleSubmit","isEdition","setEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","type","placeholder","value","onChange","e","target","onKeyPress","evt","which","title","onClick","ind","newEditItem","find","editItem","index","updateditems","filter","deleteItem","ReactDOM","render","document","getElementById"],"mappings":"gMAoIeA,EA1HF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBATfG,aAAaC,QAAQ,SAEpBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEjC,IAKX,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAiCV,mBAAS,MAA1C,mBAAOW,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,WACZ,GAAKZ,EAEE,GAAIA,IAAcQ,EACrBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAKC,KAAOL,EACZ,2BAAYI,GAAZ,IAAkBE,KAAKhB,IAEpBc,MAGfL,GAAgB,GAChBR,EAAa,IACbU,EAAY,UAEX,CACD,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAKhB,GACpEO,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACrBhB,EAAa,SAjBToB,MAAM,uBAyEd,OAHAC,qBAAU,WACNpB,aAAaqB,QAAQ,QAASnB,KAAKoB,UAAUlB,MAC9C,CAACA,IAEA,mCACI,qBAAKmB,UAAU,YAAf,SACJ,sBAAKA,UAAU,WAAf,UACQ,sBAAKA,UAAU,WAAf,UACQ,0CACJ,sBAAKA,UAAU,cAAf,UACA,uBAAOC,KAAK,OAAOC,YAAY,qBAC3BC,MAAO5B,EACC6B,SAAU,SAACC,GAAD,OAAO7B,EAAa6B,EAAEC,OAAOH,QACvCI,WA9DL,SAACC,GACpB,GAAkB,KAAdA,EAAIC,MACH,GAAKlC,EAEH,GAAIA,IAAcQ,EACrBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAKC,KAAOL,EACZ,2BAAYI,GAAZ,IAAkBE,KAAKhB,IAEpBc,MAGfL,GAAgB,GAChBR,EAAa,IACbU,EAAY,UAEX,CACD,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAKhB,GACpEO,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACrBhB,EAAa,SAjBToB,MAAM,yBA8Dcb,EAAe,mBAAGiB,UAAU,qBAAqBU,MAAM,WAAWC,QAASxB,IACvE,mBAAGa,UAAU,sBAAsBU,MAAM,cAAcC,QAASxB,UAIpF,qBAAKa,UAAU,WAAf,SAGQnB,EAAMO,KAAI,SAACC,EAAMuB,GACb,OACK,sBAAKZ,UAAU,aAAf,UACG,4BAAIX,EAAKE,OACT,+BAAM,mBAAGS,UAAU,sBAAsBU,MAAM,YAAYC,QAAS,kBA3CnF,SAACrB,GACd,IAAIuB,EAAchC,EAAMiC,MAAK,SAACzB,GAC1B,OAAOA,EAAKC,KAAOA,KAEvBN,GAAgB,GAChBR,EAAaqC,EAAYtB,MACzBL,EAAYI,GAqC0FyB,CAAS1B,EAAKC,SACxF,+BAAM,mBAAGU,UAAU,2BAA2BU,MAAM,cAAcC,QAAS,kBApDxF,SAACK,GAChB,IAAMC,EAAepC,EAAMqC,QAAO,SAAC7B,GAC/B,OAAO2B,IAAU3B,EAAKC,MAE1BR,EAASmC,GAgDoGE,CAAW9B,EAAKC,WAHnED,EAAKC,SAS3D,qBAAKU,UAAU,WAAf,SACI,wBAAQA,UAAU,MAAMG,MAAM,aAAaQ,QAzCrC,WACd7B,EAAS,KAwCD,kCCtHhBsC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.9a511ead.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './style.css';\r\nconst getLocalItems = () => {\r\n    let list = localStorage.getItem('lists');\r\n    if (list) {\r\n        return  JSON.parse(localStorage.getItem('lists'));\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getLocalItems());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEdition, setEditItem] = useState(null);\r\n    //add items\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('plss fill the data');\r\n        } else if (inputData && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEdition) {\r\n                        return{ ... elem, name:inputData}\r\n                    }\r\n                    return elem;\r\n                })   \r\n            )\r\n            setToggleSubmit(true);\r\n            setInputData('');\r\n            setEditItem(null);\r\n        }\r\n        else {\r\n            const allInputData = { id: new Date().getTime().toString(), name:inputData }\r\n         setItems([...items, allInputData]);\r\n        setInputData('');   \r\n        }\r\n    }\r\n    // add items by enter key\r\n    const handlekeyPress = (evt) => {\r\n        if (evt.which === 13) {\r\n             if (!inputData) {\r\n            alert('plss fill the data');\r\n        } else if (inputData && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEdition) {\r\n                        return{ ... elem, name:inputData}\r\n                    }\r\n                    return elem;\r\n                })   \r\n            )\r\n            setToggleSubmit(true);\r\n            setInputData('');\r\n            setEditItem(null);\r\n        }\r\n        else {\r\n            const allInputData = { id: new Date().getTime().toString(), name:inputData }\r\n         setItems([...items, allInputData]);\r\n        setInputData('');   \r\n        }\r\n        }\r\n        }\r\n\r\n    //delete items\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n        setItems(updateditems);\r\n    }\r\n\r\n    //Edit item\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n        setToggleSubmit(false);\r\n        setInputData(newEditItem.name);\r\n        setEditItem(id);\r\n    }\r\n\r\n    //remove All\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    // store local storage\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n        <div className=\"main-div\">\r\n                <div className=\"todo-box\">\r\n                        <h2>Todo App</h2>\r\n                    <div className=\"input-field\">\r\n                    <input type=\"text\" placeholder=\"write your today..\"\r\n                        value={inputData}\r\n                                onChange={(e) => setInputData(e.target.value)}\r\n                                onKeyPress={handlekeyPress}\r\n                            />\r\n                            {\r\n                                toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> :\r\n                                    <i className=\"far fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n                            }\r\n                            </div>\r\n            </div>\r\n                <div className=\"showItem\">\r\n                    \r\n                    {\r\n                        items.map((elem, ind) => {\r\n                            return (\r\n                                 <div className=\"each-items\" key={elem.id}>\r\n                                    <p>{elem.name}</p>\r\n                                    <span><i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)}></i></span>\r\n                                    <span><i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(elem.id)}></i></span>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n            </div>\r\n            <div className=\"show-btn\">\r\n                <button className=\"btn\" value=\"Remove All\" onClick={removeAll}>Remove All</button>\r\n            </div>\r\n                </div>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todo from './todo';\n\n\n\nReactDOM.render(<Todo  />,document.getElementById('root'));\n\n"],"sourceRoot":""}